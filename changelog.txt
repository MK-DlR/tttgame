5/8/26:

- Apply color palette and remove unnecessary styling
- Add transitional delay to cell hover
- Fix player specific hover not working on turn 1
- Add player specific hover color functionality for cells
- Fix player selecting occupied cell as counting as their turn
- Complete step 5
- Add alert for tie game
- Create init function to initialize game
- Add event listeners to form submit buttons
- Create functions to update turn and score displays with input usernames 
- Create initializePlayerNames function to take username inputs
- Organize various notes in pseudocode into step 6
- Set max width of container and center align

5/7/25:

- Consolidate alert and finished classes
- Add submit buttons to username inputs
- Fix newGame not removing gameAlert and finishedGame text
- Add flex formatting to css code
- Reformat html code for updated layout
- Add text inputs for player usernames
- Add step 6 to pseudocode
- Add new game button functionality
- Add new game button and styling
- Move winner notification to alert box
- Cells with value of 0 now show empty
- Update player markers to X and O emojis
- Increment winner's score by 1 when game ends
- Add tracker div to show player wins and losses
- Add padding to html elements for better readability 
- Add pseudocode notes of potential ideas
- Change order of elements in html file for better flow
- Adjust winner notification
- Create winner h1 class
- Complete step 5c
- Add text notification of winner
- Add check for if game board is full in event of a tie
- Fix "cell taken" alert continuing to show when valid cell is chosen
- Complete step 3, 4
- Fix click event to take user input and place marker
- Adjust displayController 
- Move Cell inside of Gameboard
- Make alerts and finished display when cell is taken and/or game is finished
- Add alerts and finished divs in html
- Add notes in pseudocode about textContent displays

5/6/25:

- Remove placeholder gif and text
- Center grid horizontally on page
- Start work on creating game display via DOM
- Add basic css styling for turn and board divs
- Create turn and board divs in html file
- Change wrapper name to container
- Create space for display/DOM code
- Rename resetGame to resetGameboard
- Move resetGame function location
- Create resetGame function to clear board and set to player 1's turn
- Add test move function
- Step 4 wip
- Add end game conditions to stop from playing game if finished
- Complete step 1, 2
- Add function to simulate played game
- Update checkWin logic
- Add moveSuccessful variable to store result of dropMarker
- Fix dropMarker function logic to correctly check row and column availability
- Remove unnecessary filter logic in dropMarker function

5/5/25:

- Various fixes to and debugging of function logic
- Add win condition check
- Create gameController function to create players and handle switching turns
- Create getValue function to retrieve current value of cell
- Create Cell function to take player markers
- Create printBoard function to print to console
- Create dropMarker function to check if chosen cell is available
- Create nested for loop to take columns and rows and create 2D array
- Create 3 column and 3 row constants
- Change gameBoard from {} to []

5/2/25:

- Complete step 1a, 1b
- Add giveScore function to increment playerScore as a test
- Create factory to create players along with test player
- Create factory within IIFE to create gameBoard
- Update pseudocode wording on step 1c and fix step 1 sub numbering
- Create basic container div and add temporary basic styling to see where things go
- Set default margin and padding to 0
- Create pseudocode
- Fix wrong file upload
- Resize placeholder gif
- Replace placeholder gif with one with less rapid movement
- Add project goals to README
- Create boilerplate and add placeholder gif, link css and js 
- Upload placeholder gif
- Create README, pseudocode, html, css, and js files